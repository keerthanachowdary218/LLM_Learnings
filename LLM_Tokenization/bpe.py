# -*- coding: utf-8 -*-
"""BPE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11hTCMlN9n9uCyX5vYt5EwJjLuIIevA9w
"""

from collections import Counter, defaultdict

from collections import defaultdict

def byte_pair_encoding(corpus, k):
    # Step 1: Initialize vocabulary with unique characters
    corpus=corpus.split()
    vocab = []
    for word in corpus:
      for i in word:
        if i not in vocab:
          vocab.append(i)
    print("vocab", vocab)

    # Convert corpus into list of token lists (initially characters)
    tokenized_corpus = [list(word) for word in corpus]
    print("tokenized_corpus",tokenized_corpus)
    for _ in range(k):
        # Step 2: Count frequency of adjacent token pairs
        pair_counts = defaultdict(int)
        for tokens in tokenized_corpus:
            for i in range(len(tokens) - 1):
                pair = (tokens[i], tokens[i+1])
                pair_counts[pair] += 1

        # Step 3: Find the most frequent pair
        most_frequent_pair = max(pair_counts.items(), key=lambda x: x[1])[0]
        t_L, t_R = most_frequent_pair
        t_new = t_L + t_R

        # Step 4: Update vocabulary
        vocab.append(t_new)

        # Step 5: Merge the pair in the corpus
        new_tokenized_corpus = []
        for tokens in tokenized_corpus:
            new_tokens = []
            i = 0
            while i < len(tokens):
                if i < len(tokens) - 1 and tokens[i] == t_L and tokens[i+1] == t_R:
                    new_tokens.append(t_new)
                    i += 2
                else:
                    new_tokens.append(tokens[i])
                    i += 1
            new_tokenized_corpus.append(new_tokens)
        print(new_tokenized_corpus)
        tokenized_corpus = new_tokenized_corpus

    return vocab

# Example usage:
#corpus = "low lower newest widest"
corpus = "complexity comes with complex problems"
#corpus = ["low", "lower", "newest", "widest"]
k = 10  # number of merges
vocab = byte_pair_encoding(corpus, k)
print("Final vocabulary:", vocab)